package com.ui;

import com.dao.TuyenDuongDAO;
import com.entity.TuyenDuong;
import com.utils.Auth;
import com.utils.MsgBox;
import com.utils.XValidations;
import java.awt.Color;
import java.util.List;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

public class QuanLyTuyenDuongForm extends javax.swing.JPanel {

    /**
     * Creates new form QuanLyTuyenDuongForm
     */
    public QuanLyTuyenDuongForm() {
        initComponents();
        DefaultTableCellRenderer headerCellRenderer = new DefaultTableCellRenderer();
        headerCellRenderer.setBackground(new Color(192, 227, 149));
        for (int i = 0; i < tblTuyenDuong.getModel().getColumnCount(); ++i) {
            tblTuyenDuong.getColumnModel().getColumn(i).setHeaderRenderer(headerCellRenderer);
        }
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblMaTuyenDuong = new javax.swing.JLabel();
        lblGia = new javax.swing.JLabel();
        txtMaTuyenDuong = new javax.swing.JTextField();
        lblTenTuyenDuong = new javax.swing.JLabel();
        txtGia = new javax.swing.JTextField();
        txtTenTuyenDuong = new javax.swing.JTextField();
        lblTenMien = new javax.swing.JLabel();
        cboTenMien = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTuyenDuong = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnFirst = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(248, 250, 254));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(192, 227, 149));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ TUYẾN ĐƯỜNG");

        lblMaTuyenDuong.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMaTuyenDuong.setText("Mã tuyến đường:");

        lblGia.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblGia.setText("Giá:");

        txtMaTuyenDuong.setEditable(false);

        lblTenTuyenDuong.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTenTuyenDuong.setText("Tên tuyến đường:");

        lblTenMien.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTenMien.setText("Tên miền:");

        tblTuyenDuong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã tuyến đường", "Tên tuyến đường", "Tên miền", "Giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTuyenDuong.setSelectionBackground(new java.awt.Color(35, 166, 97));
        tblTuyenDuong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTuyenDuongMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTuyenDuong);

        jPanel2.setBackground(new java.awt.Color(248, 250, 254));

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        btnThem.setText("Thêm mới");
        btnThem.setPreferredSize(new java.awt.Dimension(260, 35));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel2.add(btnThem);

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/update.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setPreferredSize(new java.awt.Dimension(260, 35));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel2.add(btnSua);

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setPreferredSize(new java.awt.Dimension(260, 35));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel2.add(btnXoa);

        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.setPreferredSize(new java.awt.Dimension(260, 35));
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });
        jPanel2.add(btnMoi);

        jPanel3.setBackground(new java.awt.Color(248, 250, 254));

        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/first.png"))); // NOI18N
        btnFirst.setPreferredSize(new java.awt.Dimension(260, 35));
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });
        jPanel3.add(btnFirst);

        btnPrevious.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/previous.png"))); // NOI18N
        btnPrevious.setPreferredSize(new java.awt.Dimension(260, 35));
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });
        jPanel3.add(btnPrevious);

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/next.png"))); // NOI18N
        btnNext.setPreferredSize(new java.awt.Dimension(260, 35));
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        jPanel3.add(btnNext);

        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/last.png"))); // NOI18N
        btnLast.setPreferredSize(new java.awt.Dimension(260, 35));
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });
        jPanel3.add(btnLast);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblMaTuyenDuong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTenTuyenDuong, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMaTuyenDuong, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                            .addComponent(txtTenTuyenDuong))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblGia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTenMien, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtGia)
                            .addComponent(cboTenMien, 0, 413, Short.MAX_VALUE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaTuyenDuong, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaTuyenDuong, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGia, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTenTuyenDuong, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenTuyenDuong, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTenMien, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboTenMien, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        prev();
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void tblTuyenDuongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTuyenDuongMouseClicked
        if (evt.getClickCount() == 2) {
            this.row = tblTuyenDuong.getSelectedRow(); // lấy vị trí được chọn gán qua row
            this.edit(); // hiện thông tin lên form
        }
    }//GEN-LAST:event_tblTuyenDuongMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        insert();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        clearForm();
    }//GEN-LAST:event_btnMoiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboTenMien;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblGia;
    private javax.swing.JLabel lblMaTuyenDuong;
    private javax.swing.JLabel lblTenMien;
    private javax.swing.JLabel lblTenTuyenDuong;
    private javax.swing.JTable tblTuyenDuong;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMaTuyenDuong;
    private javax.swing.JTextField txtTenTuyenDuong;
    // End of variables declaration//GEN-END:variables

    TuyenDuongDAO tddao = new TuyenDuongDAO();
    int row = -1; // vị trí của nhân viên đang hiển thị trên form (khi form mới hiện lên chúng ta chưa chọn hàng nào cho nên là -1)

    private void init() {
        // design giao diện
        // textfield MaTuyenDuong
        txtMaTuyenDuong.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        txtMaTuyenDuong.setBackground(new Color(235, 235, 235)); // background
        txtMaTuyenDuong.setForeground(Color.decode("#7A8C8D"));
        txtMaTuyenDuong.setFont(new java.awt.Font("sansserif", 0, 13));
        txtMaTuyenDuong.setSelectionColor(new Color(75, 175, 152));
        // textfield TenTuyenDuong
        txtTenTuyenDuong.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        txtTenTuyenDuong.setBackground(new Color(235, 235, 235)); // background
        txtTenTuyenDuong.setForeground(Color.decode("#7A8C8D"));
        txtTenTuyenDuong.setFont(new java.awt.Font("sansserif", 0, 13));
        txtTenTuyenDuong.setSelectionColor(new Color(75, 175, 152));
        // textfield Giá
        txtGia.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        txtGia.setBackground(new Color(235, 235, 235)); // background
        txtGia.setForeground(Color.decode("#7A8C8D"));
        txtGia.setFont(new java.awt.Font("sansserif", 0, 13));
        txtGia.setSelectionColor(new Color(75, 175, 152));
        // combo TenMien
        cboTenMien.setBackground(new Color(235, 235, 235)); // background
        cboTenMien.setForeground(Color.decode("#7A8C8D"));
        cboTenMien.setFont(new java.awt.Font("sansserif", 0, 13));
        this.fillTable();
        this.row = 0; // đang không chọn hàng nào
        tblTuyenDuong.setRowSelectionInterval(row, row);
        this.edit();
        this.fillCboTenMien();
    }

    private void fillCboTenMien() {
        cboTenMien.addItem("Chọn miền");
        cboTenMien.addItem("Tây");
        cboTenMien.addItem("Nam");
    }

    //=============================Bảng=============================//
    private void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblTuyenDuong.getModel();
        model.setRowCount(0); // xóa tất cả các hàng trên bảng
        try {
            List<TuyenDuong> list = tddao.selectAll(); // truy vấn dữ liệu từ database lên
            for (TuyenDuong td : list) {
                Object[] row = {
                    td.getMaTD(),
                    td.getTenTD(),
                    td.getTenMien(),
                    td.getGia()
                };
                model.addRow(row); //Thêm 1 hàng vào JTable
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    } // Đỗ dữ liệu vào bảng (truy vấn dữ liệu và hiển thị lên bảng)

    private void edit() {
        int maTD = (int) tblTuyenDuong.getValueAt(this.row, 0); // 0 là cột trên bảng
        TuyenDuong td = tddao.selectById(maTD); // truy vấn dữ liệu từ database lên
        this.setForm(td); // hiển thị thông tin tuyến đường đó lên form
        tblTuyenDuong.setRowSelectionInterval(row, row);
//        this.updateStatus(); // cập nhật lại trạng thái các nút
    } // đọc lấy tuyến đường của 1 hàng (tblTuyenDuong double click)
    //==============================================================//

    //=============================Form============================//
    private void setForm(TuyenDuong td) {
        txtMaTuyenDuong.setText(String.valueOf(td.getMaTD()));
        txtTenTuyenDuong.setText(td.getTenTD());
        cboTenMien.setSelectedItem(td.getTenMien());
        txtGia.setText(String.valueOf(td.getGia()));
    } // Hiển thị dữ liệu tuyến đường lên form

    private TuyenDuong getForm() {
        TuyenDuong td = new TuyenDuong(); // tạo ra 1 đối tượng
        if (updateStatus()) {
            td.setMaTD(Integer.valueOf(txtMaTuyenDuong.getText()));
        }
        boolean isValidate = false;
        String tenTd = txtTenTuyenDuong.getText();
        String gia = txtGia.getText();
        if (!XValidations.checkIsEmpty(this, txtTenTuyenDuong, txtGia)) {
            isValidate = XValidations.checkGia(this, txtGia).size() <= 0;
            XValidations.displayErrors(this, XValidations.checkGia(this, txtGia));
        }
        // cài đặt thông tin cho đối tượng
        td.setTenTD(tenTd);
        td.setTenMien(String.valueOf(cboTenMien.getSelectedItem()));
        if (isValidate) {
            td.setGia(Double.valueOf(gia));
        }
        return isValidate ? td : null;
    } // lấy dữ liệu từ form và tạo nhân viên
    //==============================================================//

    //==========================Quản lý==========================//
    private void insert() {
        if (getForm() != null) {
            TuyenDuong td = getForm(); // lấy dữ liệu từ form và tạo mới nhân viên
            try {
                tddao.insert(td); // insert thành công thì:
                this.fillTable(); // load lại dữ liệu lên bảng
                this.clearForm(); // xóa trắng form
                MsgBox.alert(this, "Thêm mới thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Thêm mới thất bại!");
            }
        }

    } // thêm mới vào csdl (btn thêm)

    private void update() {
        if (getForm() != null) {
            TuyenDuong td = getForm(); // lấy dữ liệu từ form và tạo mới nhân viên
//        if(!mk2.equals(nv.getMatKhau())){ // nếu không khớp báo lỗi
//            MsgBox.alert(this, "Xác nhận mật khẩu không đúng!");
//        }else{ // đã khớp
            try {
                tddao.update(td); // cập nhật thành công thì:
                this.fillTable(); // load lại dữ liệu lên bảng
                MsgBox.alert(this, "Cập nhật thành công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Cập nhật thất bại");
            }
        }
//        }
    } // cập nhật dữ liệu (btn sửa)

    private void delete() {
        if (!XValidations.checkIsEmpty(this, txtMaTuyenDuong)) {
            if (!Auth.isManager()) { // trưởng phòng mới được quyền xóa
                MsgBox.alert(this, "Bạn không có quyền xóa nhân viên");
            } else {
                if (MsgBox.confirm(this, "Bạn thực sự muốn xóa tuyến đường này?")) { // xác nhận 
                    try {
                        int maTD = Integer.valueOf(txtMaTuyenDuong.getText());
                        tddao.delete(maTD); // xóa thành công thì:
                        this.fillTable(); // load lại dữ liệu lên bảng
                        this.clearForm(); // xóa trắng form
                        MsgBox.alert(this, "Xóa thành công!");
                    } catch (Exception e) {
                        MsgBox.alert(this, "Xóa thất bại");
                    }
                }
            }
        }
    } // xóa dữ liệu (btn xóa)

    private void clearForm() {
        TuyenDuong td = new TuyenDuong(); // tạo ra 1 đối tượng mới
        this.setForm(td);
        this.row = -1; // khi xóa form sẽ không còn chọn hàng nào nữa, nên cập nhật lại -1
//        this.updateStatus(); // cập nhật lại trạng thái các nút
    } // xóa trắng form (btn mới)
    //==============================================================//

    //==========================Điều hướng==========================//
    private void first() {
        this.row = 0;
        this.edit();
        this.showDetails();
    } // btnFirst

    private void prev() {
        if (this.row > 0) {
            this.row--;
            this.edit();
        }
        this.showDetails();
    } // btnPrev

    private void next() {
        if (this.row < tblTuyenDuong.getRowCount() - 1) {
            this.row++;
            this.edit();
        }
        this.showDetails();
    } // btnNext

    private void last() {
        this.row = tblTuyenDuong.getRowCount() - 1;
        this.edit();
        this.showDetails();
    } // btnLast

    public void showDetails() {
        if (row > -1) {
            tblTuyenDuong.setRowSelectionInterval(row, row);
        }
    }
    //==============================================================//

    //==========================Điều khiển trạng thái nút quản lý==========================//
    private boolean updateStatus() {
        boolean edit = (this.row >= 0); // đang chọn 1 hàng đâu đó
        boolean first = (this.row == 0); // đang ở bảng ghi đầu tiên
        boolean last = (this.row == tblTuyenDuong.getRowCount() - 1); // đang ở vị trí cuối cùng
//     trạng thái form
//     Editable: đang xem
        txtMaTuyenDuong.setEditable(!edit); // nếu edit == false thì khi đó mới cho phép sửa
        btnThem.setEnabled(!edit);
        btnSua.setEnabled(edit);
        btnXoa.setEnabled(edit);
        // trạng thái điều hướng
        btnFirst.setEnabled(edit && !first);
        btnPrevious.setEnabled(edit && !first);
        btnNext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);

        return edit;
    } // cập nhật trạng thái các nút
    //==============================================================//
}
